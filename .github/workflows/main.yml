name: tch:lab15

on:
  workflow_dispatch:
  # push:
  #   branches: ["*"]
  #   tags:
  #     - "v*"
  # pull_request:
  #   branches: ["**"]

concurrency: production

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: docker.io

  # IMAGE_NAME: voiteckheir/tch_lab15
  # SHA: ${{ github.event.pull_request.head.sha || github.event.after }}
#
jobs:
  build:
    # Definicja systemu do instalacji na weźle roboczym
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - dockerfile: ./Dockerfile
            context: nginx
            image: voiteckheir/tch_lab15:nginx
          - dockerfile: ./Dockerfile
            context: mysql
            image: voiteckheir/tch_lab15:mysql
          - dockerfile: ./Dockerfile
            context: php
            image: voiteckheir/tch_lab15:php
          - dockerfile: ./Dockerfile
            context: phpmyadmin
            image: voiteckheir/tch_lab15:phpmyadmin
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: "0"
          persist-credentials: false

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{secrets.DOCKERHUB_USERNAME}}
          password: ${{secrets.DOCKERHUB_TOKEN}}

      # - name: Login to GHCR
      #   uses: docker/login-action@v1
      #   with:
      #     registry: ${{ env.REGISTRY }}
      #     username: ${{ github.repository_owner }}
      #     password: ${{ secrets.GHCR_SV}}
      #     #password: ${{ secrets.GH_TOKEN_NEXT }}

      # - name: Minor version for each merge
      #   id: taggerDryRun
      #   uses: anothrNick/github-tag-action@1.64.0
      #   env:
      #     #GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #     GITHUB_TOKEN: ${{ secrets.GH_TOKEN_NEXT }}
      #     WITH_V: false
      #     DRY_RUN: false

      # Instalacja środowiska Docker + Buildx
      # - name: echo new tag
      #   run: |
      #     echo "The next tag version will be: ${{ steps.taggerDryRun.outputs.new_tag }}"
      # - name: echo tag
      #   run: |
      #     echo "The current tag is: ${{ steps.taggerDryRun.outputs.tag }}"
      # - name: echo part
      #   run: |
      #     echo "The version increment was: ${{ steps.taggerDryRun.outputs.part }}"

      # - name: Docker meta
      #   id: meta
      #   uses: docker/metadata-action@v4
      #   with:
      #     images: |
      #       ${{ env.REGISTRY }}/${{ github.repository_owner }}/tch_lab15
      #     tags: |
      #       type=ref,event=branch
      #       type=ref,event=pr
      #       type=semver,pattern={{version}}
      #       type=semver,pattern={{major}}.{{minor}}
      #       type=sha,prefix=,suffix=,format=short

      # - name: Build
      #   uses: docker/bake-action@v2
      #   with:
      #     files: |
      #       ./docker-bake.hcl
      #       ${{ steps.meta.outputs.bake-file }}
      #     targets: build

      - name: Buildx set-up
        uses: docker/setup-buildx-action@v2
        with:
          driver-opts: image=moby/buildkit:v0.11.0
          buildkitd-flags: --debug

      # Instalacja QEMU
      - name: Docker Setup QEMU
        uses: docker/setup-qemu-action@v2

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx

      # Logowanie do Dockerhub-a
      - name: Build and push ghcr
        uses: docker/build-push-action@v3
        id: build
        with:
          platforms: linux/amd64,linux/arm64/v8
          context: "{{defaultsContext}}/${{matrix.context}}"
          file: ${{matrix.dockerfile}}
          push: ${{ github.event_name != 'pull_request' }}
          tags: |
            ${{matrix.image}}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max

        #  tags: |
        #    ${{ secrets.DOCKERHUB_USERNAME }}/gha_lab10:zadv1
        #  cache-from: type=registry,ref=gha_lab10:zadv1
        #  cache-to: type=registry,ref=gha_lab10:zadv1,mode=max
        #  tags: |
        #    ${{ secrets.DOCKERHUB_USERNAME }}/gha_lab10:zadv1
        #  cache-from: type=gha
        #  cache-to: type=gha,mode=max

        # Temp fix
        # https://github.com/docker/build-push-action/issues/252
        # https://github.com/moby/buildkit/issues/1896
      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

      # - name: Minor version for each merge
      #   id: taggerFinal
      #   uses: anothrNick/github-tag-action@1.36.0
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #     WITH_V: true

  # security:
  #   runs-on: ubuntu-latest
  #   needs: build
  #   steps:
  #     - uses: actions/checkout@master
  #     - name: snyk node
  #       uses: snyk/actions/node@master
  #       id: snyk
  #       continue-on-error: true
  #       env:
  #         SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
  #       with:
  #         args: --severity-threshold=critical

  # changelog:
  #   runs-on: ubuntu-latest
  #   needs: build

  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v2

  #     - name: Generate Changelog
  #       id: changelog
  #       uses: TriPSs/conventional-changelog-action@v3.7.1
  #       with:
  #         github-token: ${{ secrets.GITHUB_TOKEN }}

  #     - name: create release
  #       uses: actions/create-release@v1
  #       id: create_release
  #       if: steps.changelog.outputs.skipped == 'false'
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #       with:
  #         tag_name: ${{ steps.changelog.outputs.tag }}
  #         release_name: ${{ steps.changelog.outputs.tag }}
  #         body: ${{ steps.changelog.outputs.clean_changelog }}
  #         draft: false
  # security:
  #   runs-on: ubuntu-latest
  #   needs: build
  #   steps:
  #     - name: Login to GHCR
  #       uses: docker/login-action@v1
  #       with:
  #         registry: ${{ env.REGISTRY }}
  #         username: ${{ github.repository_owner }}
  #         password: ${{ secrets.GHCR_SV}}
  #         #password: ${{ secrets.GH_TOKEN_NEXT }}

  #     - name: snyk node
  #       uses: snyk/actions/node@master
  #       id: snyk
  #       continue-on-error: true
  #       env:
  #         SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
  #       with:
  #         args: --severity-threshold=critical

  #         image: ${{ env.REGISTRY }}/${{ github.repository_owner }}/tch_lab15:x86_64 #,${{ env.REGISTRY }}/${{ github.repository_owner }}/tch_lab15:arm64

  # - name: Run Snyk to check Docker images for vulnerabilities
  #   uses: snyk/actions/docker@master

  #   env:
  #     SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
  #     github_token: ${{ secrets.GHCR_SV }}
  #   with:
  #     image: ${{ env.REGISTRY }}/voiteckheir/tch_lab15${{github.event.pull_request.head.sha || github.event.after}}
  #     args: --severity-threshold=critical

  # - name: create release with last commit
  #   if: steps.changelog.outputs.skipped == 'false'
  #   uses: ncipollo/release-action@v1
  #   env:
  #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #   with:
  #     tag: ${{ steps.changelog.outputs.tag }}
  #     name: ${{ steps.changelog.outputs.tag }}
  #     body: ${{ steps.changelog.outputs.clean_changelog }}

  # - name: Docker Scout
  #   id: docker-scout
  #   if: ${{ github.event_name == 'push' }}
  #   uses: docker/scout-action@dd36f5b0295baffa006aa6623371f226cc03e506
  #   with:
  #     command: compare
  #     image: ${{ env.REGISTRY }}/${{ github.repository_owner }}/tch_lab15:x86_64,${{ env.REGISTRY }}/${{ github.repository_owner }}/tch_lab15:arm64
  #     to: ${{ env.REGISTRY }}/${{ github.repository_owner }}:edge
  #     ignore-unchanged: true
  #     only-severities: critical,high
  #     token: ${{ secrets.DOCKERHUB_TOKEN }}
  # Temp fix
  # https://github.com/docker/build-push-action/issues/252
  # https://github.com/moby/buildkit/issues/1896
